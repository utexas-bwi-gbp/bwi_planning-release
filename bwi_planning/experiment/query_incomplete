%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Heuristics 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% This heuristic says that only approach a door if you plan to go through it
:- v_approach(D,V_astep-1), not opendoor(D,V_astep).
:- v_opendoor(D,V_astep-1), not gothrough(D,V_astep).

% This heuristic says that once you go through a door, do not approach it
% immediately without performing some other action
:- v_gothrough(D,V_astep-1), approach(D,V_astep).

% Some supplementary definitions required by the heuristics
-noop(V_step) :- approach(D,V_step).
-noop(V_step) :- gothrough(D,V_step).
-noop(V_step) :- opendoor(D,V_step).
-noop(V_step) :- askploc(P1,V_step).
-noop(V_step) :- greet(P,V_step).

noop(V_step) :- not -noop(V_step).

v_approach(D,V_astep) :- approach(D,V_astep).
v_approach(D,V_astep) :- v_approach(D,V_astep-1), noop(V_astep).
v_opendoor(D,V_astep) :- opendoor(D,V_astep).
v_opendoor(D,V_astep) :- v_opendoor(D,V_astep-1), noop(V_astep).
v_gothrough(D,V_astep) :- gothrough(D,V_astep).
v_gothrough(D,V_astep) :- v_gothrough(D,V_astep-1), noop(V_astep).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Goals 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
faculty(dan).
goal(0,I):- visiting(dan,I).
goal(G,I+1) :- goal(G,I), I<n.
:- not goal(0,n).
