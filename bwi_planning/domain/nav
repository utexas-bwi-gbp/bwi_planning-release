%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% grounding
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
step(0..n).
astep(1..n).
#domain step(I).
#domain step(V_step).
#domain astep(V_astep).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% time dependent external knowledge
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

inside(X,Y,0) :- in_office(X,Y), not -inside(X,Y,0).
-inside(X,Y,I) :- inside(X,Y1,I), Y1!=Y, room(Y).
inside(X,Y,I+1) :- inside(X,Y,I), not -inside(X,Y,I+1), I<n.
-inside(X,Y,I+1) :- -inside(X,Y,I), not inside(X,Y,I+1), I<n.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% time dependent internal knowledge
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% inertial fluent and uniquness/existence constraints
% a door automatically closes
-open(X,I) :- not open(X,I), door(X).

facing(X,I+1) :- facing(X,I), not -facing(X,I+1), I<n.
-facing(X,I+1) :- -facing(X,I), not facing(X,I+1), I<n.
:- facing(X1,I), facing(X2,I), X1!=X2, I<=n.
-facing(X2,I) :- facing(X1,I), door(X2), X1!=X2, I<=n.

beside(X,I) :- facing(X,I).
beside(X,I+1) :- beside(X,I), not -beside(X,I+1), I<n.
-beside(X,I+1) :- -beside(X,I), not beside(X,I+1), I<n.
:- beside(X1,I), beside(X2,I), X1!=X2, I<=n.
-beside(X2,I) :- beside(X1,I), door(X2), X1!=X2, I<=n.

{at(X,I+1)} :- at(X,I), room(X), I<n.
:- not 1{at(X,I):room(X)}1.

-visiting(X,I) :- not visiting(X,I), person(X), I<=n.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% action knowledge
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% approach changes the value of beside

:- approach(Y,I), at(X,I), {door(Y):acc(X,Y,Z)}0, I<n.
:- approach(X,I), facing(X,I), I<n.
facing(X,I+1) :- approach(X,I), door(X), I<n.

% gothrough changes the value of at

:- gothrough(Y,I), at(X,I), {door(Y):acc(X,Y,Z)}0.
:- gothrough(Y,I), not open(Y,I), I<n.
:- gothrough(Y,I), not facing(Y,I), I<n.
at(Z,I+1) :- gothrough(Y,I), at(X,I), acc(X,Y,Z), I<n.
-facing(Y,I+1):- gothrough(Y,I), door(Y), I<n.

% greet changes the value of visited and beside

visiting(X,I+1) :- greet(X,I), I<n.
:- greet(X,I), at(Y,I), not inside(X,Y,I), person(X), room(Y), I<n.
:- greet(X,I), not at(Y,I), inside(X,Y,I), person(X), room(Y), I<n.

% call for open action changes the value of open

:- opendoor(X,I), not facing(X,I), I<n.
:- opendoor(X,I), open(X,I), I<n.
open(X,I+1) :- opendoor(X,I), -open(X,I), I<n, beside(X,I).

% sensing action

:- askploc(X,I), {visiting(Y,I):person(Y)}0, I<n.
:- askploc(X,I), visiting(Y,I), not knows(Y,ploc(X)), I<n.
:- askploc(X,I), inside(X,Y,I), I<n.
1{inside(X,Y,I+1):room(Y)}1:-askploc(X,I), I<n.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% nonconcurrency
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:- opendoor(X,I), opendoor(Y,I), X!=Y, I<n.
:- greet(X,I), opendoor(Y,I), I<n.
:- greet(X,I), greet(Y,I), X!=Y, I<n.
:- gothrough(X,I), opendoor(Y,I), I<n.
:- approach(X,I), opendoor(Y,I), I<n.
:- approach(X,I), greet(Y,I), I<n.
:- approach(X,I), gothrough(Y,I), I<n.
:- gothrough(X,I), greet(Y,I), I<n.

:- askploc(X,I), askploc(Y,I), X!=Y, I<n.
:- askploc(X,I), greet(Y,I), I<n.
:- askploc(X,I), opendoor(Y,I), I<n.
:- askploc(X,I), gothrough(Y,I), I<n.
:- askploc(X,I), approach(Y,I), I<n.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% standard choice rules
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

{askploc(X,I)} :- person(X), I<n.
{gothrough(X,I)} :- door(X), I<n.
{greet(X,I)} :- person(X), I<n.
{opendoor(X,I)} :- door(X), I<n.
{approach(X,I)} :- door(X), I<n.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% output (required for parsing in the python script)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#hide.

% fluents
#show at/2.
#show beside/2.
#show -beside/2.
#show open/2.
#show -open/2.
#show visiting/2.
#show -visiting/2.
#show facing/2.
#show -facing/2.
#show inside/3.
#show -inside/3.

% actions
#show opendoor/2.
#show approach/2.
#show askploc/2.
#show gothrough/2.
#show greet/2.

% goals
#show goal/2.
